name: Release

on:
  push:
    branches:
      - main
  workflow_dispatch:
    inputs:
      debug:
        description: 'Turn on verbose debug output'
        type: boolean
        default: false

concurrency: release-main

env:
  NODE_ENV: production
  RENOUN_DEBUG: ${{ inputs.debug }}
  TURBO_TOKEN: ${{ secrets.TURBO_TOKEN }}
  TURBO_TEAM: ${{ vars.TURBO_TEAM }}

jobs:
  release:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Repo
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Setup Node and pnpm
        uses: ./.github/actions/setup-node-pnpm

      - name: Install dependencies
        run: pnpm install

      - name: Build
        run: pnpm build --filter=!@examples/*

      - name: Create Release Pull Request or Publish to npm
        id: changesets
        uses: changesets/action@v1
        with:
          version: pnpm ci:version
          publish: pnpm ci:publish
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          NPM_TOKEN: ${{ secrets.NPM_TOKEN }}

      - name: Fast-forward release branch
        if: steps.changesets.outputs.published == 'true'
        run: |
          git fetch origin
          git config user.name "github-actions[bot]"
          git config user.email "github-actions[bot]@users.noreply.github.com"
          git push origin $GITHUB_SHA:refs/heads/release

      - name: Notify Discord
        if: steps.changesets.outputs.published == 'true'
        env:
          WEBHOOK_URL: ${{ secrets.DISCORD_WEBHOOK_URL }}
          PUBLISHED_PACKAGES: ${{ steps.changesets.outputs.publishedPackages }}
        run: |
          OWNER_REPO="souporserious/renoun"

          # Build one short line per package: "<name>@<version> â€” <link>"
          lines=$(echo "$PUBLISHED_PACKAGES" | jq -r --arg repo "$OWNER_REPO" '
            try ( .[] | "\(.name)@\(.version) â€” https://github.com/\($repo)/releases/tag/\(.name)@\(.version)" )[] catch empty
          ')

          if [ -z "$lines" ]; then
            echo "No packages parsed from changesets output; skipping Discord notification."
            exit 0
          fi

          trimmed=$(printf "%s\n" "$lines" | head -n 30 | head -c 1800)

          jq -n --arg msg "ðŸš€ New packages released:\n$trimmed" '{ content: $msg }' \
          | curl -sS -X POST -H "Content-Type: application/json" -d @- "$WEBHOOK_URL"
